package com.kodlama.rentalService.business.concretes;

import java.util.UUID;

import com.kodlama.rentalService.business.abstracts.RentalService;
import com.kodlama.rentalService.business.requests.CreateRentalRequest;
import com.kodlama.rentalService.business.response.CreateRentalResponse;
import com.kodlama.rentalService.dataAccess.RentalRepository;
import com.kodlama.rentalService.entities.Rental;
import com.kodlamaio.common.utilities.exceptions.BusinessException;
import com.kodlamaio.common.utilities.mapping.ModelMapperService;

public class RentalManager implements RentalService {

	private RentalRepository rentalRepository;
	private ModelMapperService modelMapperService;
	
	@Override
	public CreateRentalResponse add(CreateRentalRequest createRentalRequest) {
		
		Rental rental = this.modelMapperService.forRequest()
				.map(createRentalRequest, Rental.class);
				
		rental.setId(UUID.randomUUID().toString());
		
		this.rentalRepository.save(rental);
		
		CreateRentalResponse createRentalResponse = this.modelMapperService.forResponse()
				.map(rental, CreateRentalResponse.class);
		
		return createRentalResponse;
	}

	
	// CONTROLLERS

	
	private void checkIfRentalExistsById(String id) {
		
		if(!this.rentalRepository.existsById(id)) {
			
			throw new BusinessException("RENTAL NOT EXISTS");
		}
		
	}
}
