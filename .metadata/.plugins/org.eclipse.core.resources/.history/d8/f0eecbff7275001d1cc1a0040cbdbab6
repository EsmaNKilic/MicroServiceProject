package com.kodlama.rentalService.kafka;

import org.apache.kafka.clients.admin.NewTopic;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.kafka.core.KafkaTemplate;
import org.springframework.kafka.support.KafkaHeaders;
import org.springframework.messaging.Message;
import org.springframework.messaging.support.MessageBuilder;

import com.kodlamaio.common.events.RentalDeletedEvent;

public class RentalDeleteProducer {
	private static final Logger LOGGER = LoggerFactory.getLogger(RentalDeleteProducer.class);

	private NewTopic topic;
	
	private KafkaTemplate<String, RentalDeletedEvent> kafkaTemplate;
	
	public RentalDeleteProducer(NewTopic topic, KafkaTemplate<String, RentalDeletedEvent> kafkaTemplate) {
		this.topic = topic;
		this.kafkaTemplate = kafkaTemplate;
	}
	
	public void sendMessage(RentalDeletedEvent rentalDeletedEvent) {
		LOGGER.info(String.format("Rental updated event => %s", rentalDeletedEvent.toString()));
		
		Message<RentalDeletedEvent> message = MessageBuilder
				.withPayload(rentalDeletedEvent)
				.setHeader(KafkaHeaders.TOPIC, topic.name()).build();
		
		kafkaTemplate.send(message);
	}
}
