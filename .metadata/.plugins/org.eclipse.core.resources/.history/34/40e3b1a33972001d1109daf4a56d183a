package com.kodlamaio.inventoryservice.kafka;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.stereotype.Service;

import com.kodlamaio.common.events.RentalCreatedEvent;
import com.kodlamaio.inventoryservice.business.abstracts.CarService;

@Service
public class RentalAddConsumer {

	private static final Logger LOGGER = LoggerFactory.getLogger(RentalAddConsumer.class);
	
	private final CarService carService;
	
	public RentalAddConsumer(CarService carService) {
		
	    this.carService = carService;
	}
	
	@KafkaListener (topics = "${spring.kafka.topic.name}", groupId = "${spring.kafka.consumer.group-id}")
	
	public void consume(RentalCreatedEvent event) {
		
		carService.updateCarState(2, event.getCarId());
		
		LOGGER.info(String.format("Order event received in stock service => %s", event.toString()));
		
		// save the order event into the database
		
	}
}
 
    //LOGGER.info("Car state changed!");
