package com.kodlama.filterService.kafka.consumer.inventories;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.stereotype.Service;

import com.kodlama.filterService.business.abstracts.CarFilterService;
import com.kodlamaio.common.events.rentals.RentalCreatedEvent;
import com.kodlamaio.common.utilities.mapping.ModelMapperService;
import com.kodlamaio.inventoryservice.business.abstracts.CarService;

@Service
public class InventoryCreateConsumer {
private static final Logger LOGGER = LoggerFactory.getLogger(InventoryCreateConsumer.class);
	
	private final CarFilterService carFilterService;
	private final ModelMapperService modelMapperService;
	
	public InventoryCreateConsumer(CarFilterService carFilterService) {
		
	    this.carFilterService = carFilterService;
	}
	
	@KafkaListener (topics = "${spring.kafka.topic.name}", groupId = "${spring.kafka.consumer.group-id}")
	
	public void consume(InventoryCreatedEvent event) {
		
		carFilterService.updateCarState(3); 
		event.getCarId();
		
		LOGGER.info(String.format("Order event received in stock service => %s", event.toString()));
		
		// save the order event into the database
	}
}

